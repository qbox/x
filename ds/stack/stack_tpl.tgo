package stack

// --------------------------------------------------------------------

type elem$Type struct {
	prev *elem$Type
	val $Type
}

type Stack$Type struct {
	top *elem$Type
}

func (r *Stack$Type) Push(val $Type) {
	r.top = &elem$Type{r.top, val}
}

func (r *Stack$Type) Pop() (val $Type, ok bool) {
	if top := r.top; top != nil {
		r.top = top.prev
		return top.val, true
	}
	return
}

func (r *Stack$Type) Top() (val $Type) {
	if r.top != nil {
		return r.top.val
	}
	return
}

func (r *Stack$Type) Empty() (yes bool) {
	return r.top == nil
}

// --------------------------------------------------------------------

